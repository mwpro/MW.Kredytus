@using MW.Kredytus.Calculator

<div class="modal @(_isOpen ? "show" : "")" tabindex="-1" role="dialog" style="display:@(_isOpen ? "block" : "none");">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Zmiana stopy bazowej</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Stopa bazowa: <input @bind="_baseRate" type="number" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick="Save">Zapisz</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="Close">Zamknij</button>
            </div>
        </div>
    </div>
</div>

@if (_isOpen)
{
    <div class="modal-backdrop fade show"></div>
}

@code {
    private bool _isOpen = false;
    private decimal _baseRate;
    
    [Parameter]
    public Mortgage Mortgage { get; set; }
    [Parameter]
    public EventCallback OnChange { get; set; }
    
    private Installment _installment;

    public void Open(Installment installment)
    {
        _installment = installment;
        _baseRate = installment.BaseRate;
        _isOpen = true;
        
        StateHasChanged();
    }

    private Task Save()
    {
        Mortgage.ChangeBaseRate(_baseRate, _installment);
        Close();
        return OnChange.InvokeAsync();
    }

    public void Close()
    {
        _isOpen = false;
        StateHasChanged();
    }
}