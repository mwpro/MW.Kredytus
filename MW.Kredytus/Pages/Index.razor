@page "/"
@using Microsoft.AspNetCore.Components
@using MW.Kredytus.Calculator

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?"/>

<h2>Parametry kredytu</h2>
Pozostała kwota do spłaty: <input @bind="_mortgageParams.RemainingAmount" type="number"/><br/>
Data ostatniej raty: <input @bind="_mortgageParams.LastInstallmentDate" type="date"/><br/>
Marża banku: <input @bind="_mortgageParams.BankMargin" type="number"/>%<br/>
Stopa bazowa: <input @bind="_mortgageParams.BaseRate" type="number"/>%<br/>

<h3>Prowizja za wcześniejszą spłatę</h3>
Prowizja za wcześniejszą spłatę: <input @bind="_mortgageParams.EarlyRepaymentCommission" type="number"/>%<br/>
Prowizja za wcześniejszą spłatę do dnia: <input @bind="_mortgageParams.EarlyRepaymentCommissionEndDate" type="date"/><br/>

<h3>Ubezpieczenie niskiego LTV</h3>
Podwyższenie raty: <input @bind="_mortgageParams.LowLtvInterestIncrease" type="number"/>%<br/>
Próg LTV: <input @bind="_mortgageParams.LowLtvThreshold" type="number"/>%<br/>
Wartość nieruchomości: <input @bind="_mortgageParams.CollateralValue" type="number"/>%<br/>

<button @onclick="PrepareTable">Wygeneruj</button>

@if (_mortgage != null)
{
    <ChangeBaseRateModal Mortgage="_mortgage" @ref="_changeBaseRateModal" OnChange="@StateHasChanged" />
    <p>
        Suma odsetek: @Math.Round(_mortgage.InterestSum)
    </p>

    <table>
        <thead>
            <td>Numer raty</td>
            <td>Data raty</td>
            <td>Rata kapitałowa</td>
            <td>Rata odsetkowa</td>
            <td>Rata razem</td>
            <td>Stopa bazowa</td>
            <td>Marża banku</td>
            <td>Pozostało do spłaty</td>
            <td>Operacje</td>
        </thead>
        <tbody>
        @foreach (var installment in _mortgage.Installments)
        {
            <tr>
                <td>@installment.InstallmentNumber</td>
                <td>@installment.Date</td>
                <td>@Math.Round(installment.CapitalRepayment, 2)</td>
                <td>@Math.Round(installment.InterestRepayment, 2)</td>
                <td>@Math.Round(installment.TotalAmount, 2)</td>
                <td>@installment.BaseRate</td>
                <td>@Math.Round(installment.BankMargin, 2)</td>
                <td>@Math.Round(installment.RemainingAmount, 2)</td>
                <td>
                    <button @onclick="() => _changeBaseRateModal.Open(installment)">Zmiana stopy bazowej</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private ChangeBaseRateModal _changeBaseRateModal;
    private Mortgage? _mortgage;

    private MortgageParams _mortgageParams = new MortgageParams()
    {
        RemainingAmount = 685_467,
        LastInstallmentDate = new DateOnly(2052, 02, 05),
        BankMargin = 1.65m,
        BaseRate = 7.30m,
        EarlyRepaymentCommission = 2.0m,
        EarlyRepaymentCommissionEndDate = new DateOnly(2024, 10, 07),
        LowLtvThreshold = 0.8m,
        LowLtvInterestIncrease = 0.2m,
        CollateralValue = 760_000m
    };

    public class MortgageParams
    {
        public decimal RemainingAmount { get; set; }

        public DateOnly LastInstallmentDate { get; set; }

        public decimal BankMargin { get; set; }

        public decimal BaseRate { get; set; }

        public decimal EarlyRepaymentCommission { get; set; }

        public DateOnly EarlyRepaymentCommissionEndDate { get; set; }

        public decimal LowLtvThreshold { get; set; }
        public decimal LowLtvInterestIncrease { get; set; }
        public decimal CollateralValue { get; set; }
    }

    private void PrepareTable()
    {
        _mortgage = Mortgage.Create(_mortgageParams);
    }
}