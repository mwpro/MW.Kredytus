@using MW.Kredytus.Calculator

<div class="modal @(_isOpen ? "show" : "")" tabindex="-1" role="dialog" style="display:@(_isOpen ? "block" : "none");">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Wcześniejsza spłata (zmniejszenie raty)</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Kwota wcześniejszej spłaty: <input @bind="_repaidAmount" type="number" />
                
                <div class="form-check form-check-inline">
                  <input class="form-check-input" type="radio" id="@EarlyRepaymentMode.LowerInstallment" name="@nameof(_earlyRepaymentMode)" @onchange="()=>_earlyRepaymentMode = EarlyRepaymentMode.LowerInstallment" checked="@(_earlyRepaymentMode==EarlyRepaymentMode.LowerInstallment)">
                  <label class="form-check-label" for="@EarlyRepaymentMode.LowerInstallment">Zmniejszenie raty</label>
                </div>
                <div class="form-check form-check-inline">
                  <input class="form-check-input" type="radio" id="@EarlyRepaymentMode.ShortenMortgage" name="@nameof(_earlyRepaymentMode)" @onchange="()=>_earlyRepaymentMode = EarlyRepaymentMode.ShortenMortgage" checked="@(_earlyRepaymentMode==EarlyRepaymentMode.ShortenMortgage)">
                  <label class="form-check-label" for="@EarlyRepaymentMode.ShortenMortgage">Skrócenie okresu kredytowania</label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick="Save">Zapisz</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="Close">Zamknij</button>
            </div>
        </div>
    </div>
</div>

@if (_isOpen)
{
    <div class="modal-backdrop fade show"></div>
}

@code {
    private bool _isOpen = false;
    private decimal _repaidAmount;
    private EarlyRepaymentMode? _earlyRepaymentMode = EarlyRepaymentMode.LowerInstallment;
    
    [Parameter]
    public Mortgage Mortgage { get; set; }
    [Parameter]
    public EventCallback OnChange { get; set; }
    
    private Installment _installment;

    public void Open(Installment installment)
    {
        _installment = installment;
        _isOpen = true;
        _repaidAmount = installment.EarlyRepaymentAmount;
        _earlyRepaymentMode = EarlyRepaymentMode.LowerInstallment;
        
        StateHasChanged();
    }

    private Task Save()
    {
        switch (_earlyRepaymentMode)
        {
            case EarlyRepaymentMode.ShortenMortgage:
                Mortgage.MakeEarlyRepaymentAndShortenMortgage(_repaidAmount, _installment);
                break;
            case EarlyRepaymentMode.LowerInstallment:
                Mortgage.MakeEarlyRepaymentAndLowerInstallments(_repaidAmount, _installment);
                break;
            default:
                return Task.CompletedTask;
        }
        Close();
        return OnChange.InvokeAsync();
    }

    public void Close()
    {
        _isOpen = false;
        StateHasChanged();
    }

    enum EarlyRepaymentMode
    {
        ShortenMortgage,
        LowerInstallment
    }
}